-- VISTAS 

-- 1. Vista: ocupacion_por_hotel

-- Ver ocupación, habitaciones ocupadas y disponibles por hotel
SELECT * FROM ocupacion_por_hotel;

-- 2. Vista: clientes_frecuentes

-- Ver clientes que han hecho más de 3 reservas
SELECT * FROM clientes_frecuentes;

-- 3. Vista: reservas_futuras

-- Ver todas las reservas que aún no han iniciado
SELECT * FROM reservas_futuras;

-- 4. Vista: facturacion_por_cliente

-- Ver facturas emitidas con los datos del cliente correspondiente
SELECT * FROM facturacion_por_cliente;

-- 5. Vista: servicios_por_hotel

-- Ver cuántos servicios distintos se han usado en cada hotel
SELECT * FROM servicios_por_hotel;

-- 6. Vista: estancias_activas

-- Ver las estancias que están activas (sin check-out)
SELECT * FROM estancias_activas;



-- Stored Procedures

-- 1. Crear Hotel

-- Para crear un nuevo hotel
CALL sp_crear_hotel('Hotel XYZ', 'Calle Ficticia 123', 'Bogotá', 'Colombia', 5);

-- 2. Leer Hotel

-- Para leer los detalles de un hotel por su ID
CALL sp_leer_hotel(1);  -- Usar el ID del hotel que deseas consultar

-- 3. Actualizar Hotel

-- Para actualizar los detalles de un hotel
CALL sp_actualizar_hotel(1, 'Hotel XYZ Actualizado', 'Calle Ficticia 123 Actualizada', 'Bogotá', 'Colombia', 4);

-- 4. Eliminar Hotel

-- Para eliminar un hotel por su ID
CALL sp_eliminar_hotel(1);  -- Usar el ID del hotel que deseas eliminar

-- 5. Crear Habitacion

-- Para crear una nueva habitación
CALL sp_crear_habitacion('101', 1, 'Disponible', 4, 1);  -- Numero, Piso, Estado, ID del Hotel, ID del Tipo de Habitación

-- 6. Leer Habitacion

-- Para leer los detalles de una habitación por su ID
CALL sp_leer_habitacion(1);  -- Usar el ID de la habitación que deseas consultar

-- 7. Actualizar Habitacion

-- Para actualizar los detalles de una habitación
CALL sp_actualizar_habitacion(1, '101', 1, 'Ocupada', 5, 3);  -- ID, Numero, Piso, Estado, ID del Hotel, ID del Tipo de Habitación

-- 8. Eliminar Habitacion

-- Para eliminar una habitación por su ID
CALL sp_eliminar_habitacion(1);  -- Usar el ID de la habitación que deseas eliminar

-- 9. Crear Cliente

-- Para crear un nuevo cliente
CALL sp_crear_cliente('Juan', 'Pérez', 'juan@example.com', '123456789', '12345678');  -- Nombre, Apellido, Email, Teléfono, Documento de identidad

-- 10. Leer Cliente

-- Para leer los detalles de un cliente por su ID
CALL sp_leer_cliente(1);  -- Usar el ID del cliente que deseas consultar

-- 11. Actualizar Cliente

-- Para actualizar los detalles de un cliente
CALL sp_actualizar_cliente(1, 'Juan', 'Pérez', 'juan@nuevoemail.com', '987654321', '87654321');  -- ID, Nombre, Apellido, Email, Teléfono, Documento de identidad

-- 12. Eliminar Cliente

-- Para eliminar un cliente por su ID
CALL sp_eliminar_cliente(1);  -- Usar el ID del cliente que deseas eliminar

-- 13. Crear Reserva

-- Para crear una nueva reserva
CALL sp_crear_reserva(1, 1, '2025-06-01', '2025-06-05', 'Confirmada');  -- ID del Cliente, ID del Hotel, Fecha de inicio, Fecha de fin, Estado de la reserva

-- 14. Leer Reserva

-- Para leer los detalles de una reserva por su ID
CALL sp_leer_reserva(1);  -- Usar el ID de la reserva que deseas consultar

-- 15. Actualizar Reserva

-- Para actualizar los detalles de una reserva
CALL sp_actualizar_reserva(1, 1, 1, '2025-06-01', '2025-06-10', 'Confirmada');  -- ID, ID del Cliente, ID del Hotel, Fecha de inicio, Fecha de fin, Estado de la reserva

-- 16. Eliminar Reserva

-- Para eliminar una reserva por su ID
CALL sp_eliminar_reserva(1);  -- Usar el ID de la reserva que deseas eliminar



-- TRIGGERS

-- 1. Trigger Auditoria Reservas

-- Insertar una nueva reserva (esto activará el trigger)
INSERT INTO Reserva (id_cliente, id_hotel, fecha_inicio, fecha_fin, estado)
VALUES (1, 1, '2025-06-01', '2025-06-05', 'Confirmada');

SELECT * FROM AuditoriaReserva;

-- Actualizar una reserva existente (esto activará el trigger)
UPDATE Reserva
SET estado = 'Cancelada'
WHERE id = 1;  -- Asegúrate de usar un ID de reserva válido

-- 1. Trigger Auditoria Estancia


INSERT INTO Estancia (id_reserva, fecha_checkin, fecha_checkout, id_habitacion, observaciones)
VALUES (1, '2025-05-15', '2025-05-20', 1, 'Estancia confirmada');

SELECT * FROM AuditoriaEstancia;

UPDATE Estancia
SET fecha_checkout = '2025-05-21'
WHERE id = 1;


-- 1. Trigger Auditoria Habitaciones

INSERT INTO Habitacion (numero, piso, estado, id_hotel, id_tipo_habitacion)
VALUES ('101', 1, 'disponible', 3, 1);

SELECT * FROM Habitacion;

UPDATE Habitacion
SET estado = 'ocupada'
WHERE id = 7;

SELECT * FROM AuditoriaHabitacion;


-- FUNCIONES


-- Funciones Tabla Hotel

SELECT contar_habitaciones_por_hotel(1);  -- Devuelve cuántas habitaciones tiene el hotel con ID 1

SELECT obtener_facturacion_total_por_hotel(2);  -- Total facturado en el hotel con ID 2

-- Funciones Tabla Habitación

SELECT verificar_disponibilidad_habitacion(1, '2025-05-20', '2025-05-25');

SELECT obtener_precio_base_habitacion(3);

-- Funciones Tabla Cliente

SELECT contar_reservas_cliente(1);

SELECT ultimo_hotel_cliente(4);

-- Funciones Tabla Reservas

SELECT calcular_duracion_estancia(1);

SELECT verificar_cruce_reservas('2025-06-20', '2025-06-25', 5);

	
